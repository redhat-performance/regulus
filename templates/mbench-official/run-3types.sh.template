#!/bin/bash
source ${REG_ROOT}/lab.config
source ${REG_ROOT}/init.sh 
source ${REG_ROOT}/templates/common/functions

NUM_SAMPLES=${NUM_SAMPLES:-1}
DURATION=${DURATION:-0}
OCP_PROJECT=${OCP_PROJECT:-crucible-rickshaw}

num_samples=$NUM_SAMPLES
config=$1
placement=./pairs.placement
if [ -z "$config" ]; then
    echo "config file not specified.  Use ./run.sh <your-config-file>"
    exit 1
fi
if [ ! -e $config ]; then
    echo "Could not find $config, exiting"
    exit 1
fi

if [ ! -e $placement ]; then
    echo "Could not find $placement, exiting"
    exit 1
fi
. $placement
. $config

if [ -z "$tags" ]; then
    echo "You must define tags in your config file"
    exit 1
fi

if [ -z "$ocp_host" ]; then
    echo "You must define ocp_host in your config file"
    exit 1
fi

if [ -z "${num_samples}" ]; then
    echo "You must define num_samples in your config file"
    exit 1
fi

if [ ! -z "${OCP_PROJECT}" ]; then
    endpoint_opt+="unique-project:${OCP_PROJECT}"
fi
if [ "${DRY_RUN}" == true  ]; then
    echo DRY=true
    endpoint_opt+=",dry-run:true"
fi

if [ "$TPL_PAO" == 1 ] || [ "$TPL_SRIOV" == 1 ] || [ "$TPL_HOSTNETWORK" == 1 ] || [ "$TPL_MACVLAN" == 1 ]; then
    securityContext_file="`/bin/pwd`/securityContext.json"
    endpoint_opt+=",securityContext:default:$securityContext_file"
fi

if [ "${TPL_SRIOV}" == 1  ]; then
	source ${REG_ROOT}/SRIOV-config/config.env
    DEST=$REG_KNI_USER@$REG_OCPHOST
    do_ssh ${DEST} "kubectl delete ns $OCP_PROJECT" &> /dev/null
    do_ssh ${DEST} "kubectl create ns $OCP_PROJECT"

    # crucible delete NS and thus also delete neworkAttachmentDefinition. Now we need to recreate them.
    do_ssh ${DEST} "kubectl config set-context --current --namespace=$OCP_PROJECT && kubectl apply -f ${REM_REG_ROOT}/${REG_SRIOV_NAD}"
    # sometime the network-attachment takes a few seconds to be ready.
    sleep 5
fi

if [ "${TPL_MACVLAN}" == 1  ]; then
	source ${REG_ROOT}/MACVLAN-config/config.env
    DEST=$REG_KNI_USER@$REG_OCPHOST
    do_ssh ${DEST} "kubectl delete ns $OCP_PROJECT" &> /dev/null
    do_ssh ${DEST} "kubectl create ns $OCP_PROJECT"

    # crucible delete NS and thus also delete neworkAttachmentDefinition. Now we need to recreate them.
    do_ssh ${DEST} "kubectl config set-context --current --namespace=$OCP_PROJECT && kubectl apply -f ${REM_REG_ROOT}/${REG_MACVLAN_NAD}"
    # sometime the network-attachment takes a few seconds to be ready.
    sleep 5
fi


if [ "$DURATION" != 0 ]; then
	# Use the env-defined duration 
	FILES=$(ls *mv*.json)
	for file in $FILES; do
		sed -i 's/\({ "arg": "duration", "vals": \["\)[0-9]*\("\] }\)/\1'"$DURATION"'\2/g' $file
		sed -i 's/\({ "arg": "time", "vals": \["\)[0-9]*\("\] }\)/\1'"$DURATION"'\2/g' $file
	done
fi

ARGS=" --mv-params iperf-mv-params.json,uperf-mv-params.json\
 --bench-ids iperf:21-26,uperf:1-20,uperf:27-32\
 --tags $tags\
 --num-samples=$NUM_SAMPLES --max-sample-failures=1\
 --endpoint k8s,user:$k8susr,host:$ocp_host,$endpoint_opt,\
\
nodeSelector:client-${worker1_clients}:$pwd/nodeSelector-$worker1.json,\
nodeSelector:server-${worker1_servers}:$pwd/nodeSelector-$worker1.json,\
\
nodeSelector:client-${worker2_clients}:$pwd/nodeSelector-$worker2.json,\
nodeSelector:server-${worker2_servers}:$pwd/nodeSelector-$worker2.json,\
\
nodeSelector:client-${worker3_clients}:$pwd/nodeSelector-$worker3.json,\
nodeSelector:server-${worker3_servers}:$pwd/nodeSelector-$worker3.json,\
userenv:fedora-latest,\
masters-tool-collect:0,\
client:1-32,\
server:1-32${annotation_opt}${resources_opt}"

# OBSOLETE CLI: time crucible run iperf,uperf $ARGS
reg-c2j-config.py --name iperf,uperf --output all-in-one.json --tool-params tool-params.json $ARGS
time crucible run --from-file all-in-one.json
